<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_Chiffre_8h_source" xml:lang="en-US">
<title>Chiffre.h</title>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;cstdint&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;random&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;algorithm&gt;</emphasis>
8 
9 <emphasis role="keyword">namespace&#32;</emphasis>Chiffres&#32;{
15 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;State&#32;{
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Circulation,
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rest
20 &#32;&#32;&#32;&#32;};
21 
22 
32 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structChiffres_1_1EthicsScore">EthicsScore</link>&#32;{
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_structChiffres_1_1EthicsScore_1a551166a0fa9227929cdee03e9d80611c">score</link>&#32;=&#32;0.0;
35 &#32;&#32;&#32;&#32;};
36 
37 
45 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structChiffres_1_1Memory">Memory</link>&#32;{
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_structChiffres_1_1Memory_1a468a19729ae6cc4583d739466aea58e9">volatility_bias</link>&#32;=&#32;1.0;
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_structChiffres_1_1Memory_1a947f4fe9255450343d95368a282fc899">stability_bias</link>&#32;=&#32;1.0;
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::uint64_t&#32;<link linkend="_structChiffres_1_1Memory_1ab8c1683e633725920ed84f4ae3dbf6a1">events</link>&#32;=&#32;0;
52 &#32;&#32;&#32;&#32;};
53 
67 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structChiffres_1_1CyclePhase">CyclePhase</link>&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_structChiffres_1_1CyclePhase_1aad71f527f05582ea4d5d9027e4af7b4e">phase</link>&#32;=&#32;0.0;
70 &#32;&#32;&#32;&#32;};
71 
72 
90 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classChiffres_1_1Chiffre_1a4e7fe70f5d87cc472d9951351c660ca1">Chiffre</link>&#32;{
91 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_classChiffres_1_1Chiffre_1a4e7fe70f5d87cc472d9951351c660ca1">Chiffre</link>(<emphasis role="keywordtype">double</emphasis>&#32;initial&#32;=&#32;0.0);
99 
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classChiffres_1_1Chiffre_1af31b6e2a8342531fd5158168ba6d7669">spend</link>(<emphasis role="keywordtype">double</emphasis>&#32;amount);
110 
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classChiffres_1_1Chiffre_1ae5471e24d6ee4551dc1214ab5ffa09fd">receive</link>(<emphasis role="keywordtype">double</emphasis>&#32;amount);
121 
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classChiffres_1_1Chiffre_1af0f6b25c5b4f0432bdc515153cb2d537">mutate</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structChiffres_1_1EthicsScore">EthicsScore</link>&#32;&amp;ethics,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structChiffres_1_1CyclePhase">CyclePhase</link>&#32;&amp;cycle);
141 
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classChiffres_1_1Chiffre_1a9c7514bc00181101f8238423bc99c543">set_state</link>(State&#32;<link linkend="_classChiffres_1_1Chiffre_1ad8e6fe2301ae00e0baaeb37ffcb43770">state</link>)&#32;<emphasis role="keyword">noexcept</emphasis>;
144 
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[nodiscard]]&#32;State&#32;<link linkend="_classChiffres_1_1Chiffre_1ad8e6fe2301ae00e0baaeb37ffcb43770">state</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
147 
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[nodiscard]]&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classChiffres_1_1Chiffre_1aa80436dfacfa13618045e60281e454b2">total</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
150 
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[nodiscard]]&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structChiffres_1_1Memory">Memory</link>&#32;&amp;<link linkend="_classChiffres_1_1Chiffre_1a5f42ad78be6ca6f83a0fa96122b22402">memory</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
153 
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classChiffres_1_1Chiffre_1adfc3d797ea07881e06b4743253ab6383">record_flow</link>(<emphasis role="keywordtype">double</emphasis>&#32;amount,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;incoming);
167 
168 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[nodiscard]]&#32;<emphasis role="keywordtype">double</emphasis>&#32;draw_mutation_factor(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structChiffres_1_1EthicsScore">EthicsScore</link>&#32;&amp;ethics,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structChiffres_1_1CyclePhase">CyclePhase</link>&#32;&amp;cycle)&#32;<emphasis role="keyword">const</emphasis>;
186 
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;State&#32;state_&#32;=&#32;State::Circulation;
189 
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;total_;
192 
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structChiffres_1_1Memory">Memory</link>&#32;mem_;
195 
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;std::mt19937_64&#32;rng{std::random_device{}()};
198 &#32;&#32;&#32;&#32;};
199 }
</programlisting></section>
